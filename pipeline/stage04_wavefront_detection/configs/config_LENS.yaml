# Config file for Stage 4 - Wavefront Detection

# Name of stage, must be identical with folder name
STAGE_NAME: 'stage04_wavefront_detection'

# The profile name is the key for this parameter configuration. Results are stored in output_path/<PROFILE>/ (output_path is defined in settings.py)
PROFILE: 'LENS'

# Name of the output file
STAGE_OUTPUT: "waves.nix"

# File format in which all intermediate neo objects are stored
NEO_FORMAT: 'nix'

# If True (default), the output file of a stage is created as symbolic link
# to the last block output. If False, a duplicate is created (e.g. for cloud
# application, where sym-links are not supported).
USE_LINK_AS_STAGE_OUTPUT: True

# Plotting parameters
PLOT_TSTART: 0  # in s
PLOT_TSTOP: 10  # in s
PLOT_CHANNELS: [1675, 2181, 1889]  # int or None. default 'None' -> randomly selected
PLOT_FORMAT: 'png'

# DETECTION BLOCK
#################
# Available Blocks: 'WaveHunt_Clustering', 'WaveHunt_Time'
DETECTION_BLOCK: WaveHunt_Time

# Tigger Filter
###############
TRIGGER_FILTER: [] # ToDo

# Wavefront Filter
##################
WAVEFRONT_FILTER: [] # ToDo

# Wavefront Clustering
######################
# Using sklearn.cluster.DBSCAN
METRIC: 'euclidean'
# eps, maximum distance between points to be neigbours
NEIGHBOUR_DISTANCE: 10
MIN_SAMPLES_PER_WAVE: 100
# Factor from time dimension to space dimension in sampling_rate*spatial_scale
TIME_SPACE_RATIO: 8  # i.e. distance between 2 frames corresponds to X pixel

# Optical Flow (Horn-Schunck algorithm)
##############
# weight of the smoothness constraint over the brightness constancy constraint
ALPHA: 1.5
# maximum number of iterations optimizing the vector field
MAX_NITER: 100
# the optimization end either after MAX_NITER iteration or when the
# maximal change between iterations is smaller than the CONVERGENCE_LIMIT
CONVERGENCE_LIMIT: 0.0001
# standard deviations for the Gaussian filter applied on the vector field
# [t_std, x_std, y_std]. (0,0,0) for no filter
GAUSSIAN_SIGMA: [0,5,5]
# Kernel filter to use to calucualte the spatial derivatives.
# "Simple", "Prewitt", "Sobel", or "Roberts"
DERIVATIVE_FILTER: 'Simple'

# Critical Point Detection
##########################
DETECT_CRITICAL_POINTS: True

# Critical Point Clustering
###########################

#WaveHunt_Time
###########################
MAX_ABS_TIMELAG: 0.8 # Maximum reasonable time lag between electrodes (pixels)...
ACCEPTABLE_REJECTION_RATE: 0.1;
MIN_CH_NUM: 300